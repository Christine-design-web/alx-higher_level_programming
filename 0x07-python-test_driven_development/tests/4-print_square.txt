import unittest

class TestSayMyName(unittest.TestCase):
    def test_say_my_name(self):
        # Test with both first name and last name
        expected_output = "My name is John Doe"
        self.assertOutputEquals("John", "Doe", expected_output)

        # Test with only first name
        expected_output = "My name is Alice "
        self.assertOutputEquals("Alice", "", expected_output)

        # Test with invalid input (non-string)
        self.assertRaises(TypeError, self.assertOutputEquals, 123, "Smith")

    def assertOutputEquals(self, first_name, last_name, expected_output):
        # Capture the output using context manager
        with self.assertLogs(level="INFO") as cm:
            # Call the function
            say_my_name(first_name, last_name)
        
        # Extract the actual output from the logs
        actual_output = cm.output[0]
        
        # Assert the actual output matches the expected output
        self.assertEqual(actual_output, expected_output)

if __name__ == "__main__":
    unittest.main()

